TimeQuest Timing Analyzer report for Mod_Teste
Thu Mar 21 15:39:47 2024
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'KEY[1]'
 12. Slow Model Setup: 'CLOCK_50'
 13. Slow Model Hold: 'CLOCK_50'
 14. Slow Model Hold: 'KEY[1]'
 15. Slow Model Minimum Pulse Width: 'CLOCK_50'
 16. Slow Model Minimum Pulse Width: 'KEY[1]'
 17. Clock to Output Times
 18. Minimum Clock to Output Times
 19. Propagation Delay
 20. Minimum Propagation Delay
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'KEY[1]'
 27. Fast Model Setup: 'CLOCK_50'
 28. Fast Model Hold: 'CLOCK_50'
 29. Fast Model Hold: 'KEY[1]'
 30. Fast Model Minimum Pulse Width: 'CLOCK_50'
 31. Fast Model Minimum Pulse Width: 'KEY[1]'
 32. Clock to Output Times
 33. Minimum Clock to Output Times
 34. Propagation Delay
 35. Minimum Propagation Delay
 36. Multicorner Timing Analysis Summary
 37. Clock to Output Times
 38. Minimum Clock to Output Times
 39. Progagation Delay
 40. Minimum Progagation Delay
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; Mod_Teste                                                         ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C35F672C6                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                               ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets      ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------+
; CLOCK_50   ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 } ;
; KEY[1]     ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { KEY[1] }   ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 132.87 MHz ; 132.87 MHz      ; KEY[1]     ;      ;
; 230.31 MHz ; 230.31 MHz      ; CLOCK_50   ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+-----------------------------------+
; Slow Model Setup Summary          ;
+----------+--------+---------------+
; Clock    ; Slack  ; End Point TNS ;
+----------+--------+---------------+
; KEY[1]   ; -6.526 ; -333.071      ;
; CLOCK_50 ; -3.342 ; -81.331       ;
+----------+--------+---------------+


+----------------------------------+
; Slow Model Hold Summary          ;
+----------+-------+---------------+
; Clock    ; Slack ; End Point TNS ;
+----------+-------+---------------+
; CLOCK_50 ; 0.391 ; 0.000         ;
; KEY[1]   ; 1.400 ; 0.000         ;
+----------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+----------+--------+--------------------+
; Clock    ; Slack  ; End Point TNS      ;
+----------+--------+--------------------+
; CLOCK_50 ; -1.380 ; -52.380            ;
; KEY[1]   ; -1.222 ; -57.222            ;
+----------+--------+--------------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'KEY[1]'                                                                                                                               ;
+--------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+
; -6.526 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.564      ;
; -6.525 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.563      ;
; -6.494 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.534      ;
; -6.493 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.533      ;
; -6.356 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.394      ;
; -6.351 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[3][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.389      ;
; -6.346 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[5][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 7.383      ;
; -6.324 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.364      ;
; -6.319 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[3][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.359      ;
; -6.314 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[5][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 7.353      ;
; -6.303 ; register_8BITS:myReg|register[6][1] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.343      ;
; -6.302 ; register_8BITS:myReg|register[6][1] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.342      ;
; -6.291 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.331      ;
; -6.289 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.329      ;
; -6.284 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[3][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.324      ;
; -6.282 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 7.318      ;
; -6.282 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[1][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.322      ;
; -6.278 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[5][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 7.317      ;
; -6.267 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 7.297      ;
; -6.265 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 7.295      ;
; -6.252 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.290      ;
; -6.247 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[3][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.285      ;
; -6.243 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.002     ; 7.277      ;
; -6.242 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[5][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 7.279      ;
; -6.211 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[7][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 7.244      ;
; -6.211 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[6][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 7.244      ;
; -6.211 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[6][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 7.247      ;
; -6.197 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[7][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 7.230      ;
; -6.194 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[6][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 7.227      ;
; -6.187 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.225      ;
; -6.185 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.223      ;
; -6.180 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[3][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.218      ;
; -6.178 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.002     ; 7.212      ;
; -6.178 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[1][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.216      ;
; -6.174 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[5][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 7.211      ;
; -6.166 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[7][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 7.199      ;
; -6.163 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.008     ; 7.191      ;
; -6.162 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[5][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.001     ; 7.197      ;
; -6.161 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[4][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.001     ; 7.196      ;
; -6.161 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.008     ; 7.189      ;
; -6.155 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.195      ;
; -6.153 ; register_8BITS:myReg|register[4][5] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.006      ; 7.195      ;
; -6.153 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.193      ;
; -6.151 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[3][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.002     ; 7.185      ;
; -6.151 ; register_8BITS:myReg|register[4][5] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.006      ; 7.193      ;
; -6.150 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.190      ;
; -6.148 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.188      ;
; -6.148 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.188      ;
; -6.148 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[3][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.188      ;
; -6.146 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 7.182      ;
; -6.146 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[1][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.186      ;
; -6.143 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[3][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.183      ;
; -6.143 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[3][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.183      ;
; -6.142 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[5][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 7.181      ;
; -6.141 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 7.177      ;
; -6.141 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[1][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.181      ;
; -6.138 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[5][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 7.177      ;
; -6.137 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[5][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 7.176      ;
; -6.133 ; register_8BITS:myReg|register[6][1] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.173      ;
; -6.131 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 7.161      ;
; -6.129 ; register_8BITS:myReg|register[4][5] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.004     ; 7.161      ;
; -6.129 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 7.159      ;
; -6.128 ; register_8BITS:myReg|register[6][1] ; register_8BITS:myReg|register[3][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.168      ;
; -6.127 ; register_8BITS:myReg|register[4][5] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.004     ; 7.159      ;
; -6.126 ; register_8BITS:myReg|register[6][2] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.166      ;
; -6.126 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 7.156      ;
; -6.125 ; register_8BITS:myReg|register[6][2] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.004      ; 7.165      ;
; -6.124 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 7.154      ;
; -6.123 ; register_8BITS:myReg|register[6][1] ; register_8BITS:myReg|register[5][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 7.162      ;
; -6.112 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[6][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.005     ; 7.143      ;
; -6.112 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[3][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.005     ; 7.143      ;
; -6.107 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.145      ;
; -6.107 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[7][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.005     ; 7.138      ;
; -6.107 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.005     ; 7.138      ;
; -6.106 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.144      ;
; -6.103 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[2][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.001     ; 7.138      ;
; -6.103 ; register_8BITS:myReg|register[5][5] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 7.140      ;
; -6.102 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[4][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.002     ; 7.136      ;
; -6.101 ; register_8BITS:myReg|register[5][5] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 7.138      ;
; -6.093 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[7][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.005     ; 7.124      ;
; -6.090 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.005     ; 7.121      ;
; -6.087 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[4][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.008     ; 7.115      ;
; -6.083 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.121      ;
; -6.081 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.119      ;
; -6.079 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[1][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 7.118      ;
; -6.079 ; register_8BITS:myReg|register[5][5] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.009     ; 7.106      ;
; -6.077 ; register_8BITS:myReg|register[5][5] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.009     ; 7.104      ;
; -6.076 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[3][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.114      ;
; -6.075 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[7][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 7.108      ;
; -6.075 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[6][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 7.108      ;
; -6.074 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.002     ; 7.108      ;
; -6.074 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[1][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 7.112      ;
; -6.073 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.007     ; 7.102      ;
; -6.073 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[3][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.007     ; 7.102      ;
; -6.071 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.002     ; 7.105      ;
; -6.070 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[7][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 7.103      ;
; -6.070 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[6][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 7.103      ;
; -6.070 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[5][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 7.107      ;
; -6.070 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[4][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 7.106      ;
; -6.067 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[4][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.002     ; 7.101      ;
+--------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLOCK_50'                                                                                                                       ;
+--------+-------------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; -3.342 ; LCD_TEST:MyLCD|LUT_INDEX[1]         ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 4.380      ;
; -3.250 ; register_8BITS:myReg|register[4][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.093      ; 4.379      ;
; -3.093 ; register_8BITS:myReg|register[7][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.092      ; 4.221      ;
; -3.074 ; LCD_TEST:MyLCD|LUT_INDEX[2]         ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 4.112      ;
; -2.945 ; LCD_TEST:MyLCD|LUT_INDEX[0]         ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 3.983      ;
; -2.935 ; LCD_TEST:MyLCD|LUT_INDEX[3]         ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 3.973      ;
; -2.607 ; register_8BITS:myReg|register[2][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.091      ; 3.734      ;
; -2.561 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.597      ;
; -2.561 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.597      ;
; -2.561 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.597      ;
; -2.561 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.597      ;
; -2.561 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.597      ;
; -2.561 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.597      ;
; -2.561 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.597      ;
; -2.561 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.597      ;
; -2.561 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.597      ;
; -2.553 ; register_8BITS:myReg|register[6][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.090      ; 3.679      ;
; -2.524 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.560      ;
; -2.524 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.560      ;
; -2.524 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.560      ;
; -2.524 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.560      ;
; -2.524 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.560      ;
; -2.524 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.560      ;
; -2.524 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.560      ;
; -2.524 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.560      ;
; -2.524 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.560      ;
; -2.414 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.450      ;
; -2.414 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.450      ;
; -2.414 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.450      ;
; -2.414 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.450      ;
; -2.414 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.450      ;
; -2.414 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.450      ;
; -2.414 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.450      ;
; -2.414 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.450      ;
; -2.414 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.450      ;
; -2.409 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.445      ;
; -2.409 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.445      ;
; -2.409 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.445      ;
; -2.409 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.445      ;
; -2.409 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.445      ;
; -2.409 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.445      ;
; -2.409 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.445      ;
; -2.409 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.445      ;
; -2.409 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.445      ;
; -2.351 ; register_8BITS:myReg|register[1][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.091      ; 3.478      ;
; -2.293 ; register_8BITS:myReg|register[3][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.090      ; 3.419      ;
; -2.277 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.313      ;
; -2.277 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.313      ;
; -2.277 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.313      ;
; -2.277 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.313      ;
; -2.277 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.313      ;
; -2.277 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.313      ;
; -2.277 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.313      ;
; -2.277 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.313      ;
; -2.277 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.313      ;
; -2.265 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mLCD_ST.000010 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.307      ;
; -2.262 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mLCD_ST.000001 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.304      ;
; -2.261 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mLCD_ST.000011 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.303      ;
; -2.228 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mLCD_ST.000010 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.270      ;
; -2.225 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mLCD_ST.000001 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.267      ;
; -2.224 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mLCD_ST.000011 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.266      ;
; -2.192 ; LCD_TEST:MyLCD|LUT_INDEX[0]         ; LCD_TEST:MyLCD|mLCD_DATA[4]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.001     ; 3.227      ;
; -2.171 ; LCD_TEST:MyLCD|LUT_INDEX[4]         ; LCD_TEST:MyLCD|mLCD_DATA[4]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.001     ; 3.206      ;
; -2.162 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.198      ;
; -2.162 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.198      ;
; -2.162 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.198      ;
; -2.162 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.198      ;
; -2.162 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.198      ;
; -2.162 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.198      ;
; -2.162 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.198      ;
; -2.162 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.198      ;
; -2.162 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.198      ;
; -2.127 ; LCD_TEST:MyLCD|LUT_INDEX[4]         ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 3.165      ;
; -2.118 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mLCD_ST.000010 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.160      ;
; -2.115 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mLCD_ST.000001 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.157      ;
; -2.114 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mLCD_ST.000011 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.156      ;
; -2.113 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mLCD_ST.000010 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.155      ;
; -2.110 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mLCD_ST.000001 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.152      ;
; -2.109 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mLCD_ST.000011 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.151      ;
; -2.084 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[9]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.128      ;
; -2.084 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[10]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.128      ;
; -2.084 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[11]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.128      ;
; -2.084 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[12]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.128      ;
; -2.084 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[13]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.128      ;
; -2.084 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[14]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.128      ;
; -2.084 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[15]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.128      ;
; -2.084 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[16]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.128      ;
; -2.084 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[17]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.128      ;
; -2.047 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[9]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.091      ;
; -2.047 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[10]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.091      ;
; -2.047 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[11]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.091      ;
; -2.047 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[12]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.091      ;
; -2.047 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[13]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.091      ;
; -2.047 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[14]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.091      ;
; -2.047 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[15]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.091      ;
; -2.047 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[16]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.091      ;
; -2.047 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[17]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.008      ; 3.091      ;
; -2.032 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.068      ;
; -2.032 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.068      ;
; -2.032 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.068      ;
+--------+-------------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLOCK_50'                                                                                                                                         ;
+-------+-------------------------------------------+-------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                                 ; To Node                                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------------------------+-------------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.391 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000010             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.538 ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.804      ;
; 0.544 ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.810      ;
; 0.548 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.814      ;
; 0.550 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.816      ;
; 0.566 ; LCD_TEST:MyLCD|mLCD_ST.000011             ; LCD_TEST:MyLCD|mLCD_ST.000000             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.832      ;
; 0.570 ; LCD_TEST:MyLCD|mLCD_ST.000011             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.836      ;
; 0.578 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.844      ;
; 0.587 ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.853      ;
; 0.590 ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_RS                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.856      ;
; 0.704 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 0.969      ;
; 0.718 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.984      ;
; 0.795 ; LCD_TEST:MyLCD|mDLY[0]                    ; LCD_TEST:MyLCD|mDLY[0]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.061      ;
; 0.796 ; LCD_TEST:MyLCD|mDLY[9]                    ; LCD_TEST:MyLCD|mDLY[9]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.062      ;
; 0.801 ; LCD_TEST:MyLCD|mDLY[10]                   ; LCD_TEST:MyLCD|mDLY[10]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.067      ;
; 0.803 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.069      ;
; 0.808 ; LCD_TEST:MyLCD|mDLY[2]                    ; LCD_TEST:MyLCD|mDLY[2]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.074      ;
; 0.808 ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|mLCD_DATA[6]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 1.073      ;
; 0.809 ; LCD_TEST:MyLCD|mDLY[4]                    ; LCD_TEST:MyLCD|mDLY[4]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.075      ;
; 0.813 ; LCD_TEST:MyLCD|mDLY[11]                   ; LCD_TEST:MyLCD|mDLY[11]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.079      ;
; 0.814 ; LCD_TEST:MyLCD|mDLY[6]                    ; LCD_TEST:MyLCD|mDLY[6]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.080      ;
; 0.814 ; LCD_TEST:MyLCD|mDLY[7]                    ; LCD_TEST:MyLCD|mDLY[7]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.080      ;
; 0.814 ; LCD_TEST:MyLCD|mDLY[13]                   ; LCD_TEST:MyLCD|mDLY[13]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.080      ;
; 0.814 ; LCD_TEST:MyLCD|mDLY[16]                   ; LCD_TEST:MyLCD|mDLY[16]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.080      ;
; 0.815 ; LCD_TEST:MyLCD|mDLY[8]                    ; LCD_TEST:MyLCD|mDLY[8]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.081      ;
; 0.826 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.092      ;
; 0.834 ; LCD_TEST:MyLCD|mDLY[17]                   ; LCD_TEST:MyLCD|mDLY[17]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.100      ;
; 0.834 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.100      ;
; 0.839 ; LCD_TEST:MyLCD|mLCD_ST.000001             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.105      ;
; 0.840 ; LCD_TEST:MyLCD|mLCD_ST.000001             ; LCD_TEST:MyLCD|mLCD_ST.000010             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.106      ;
; 0.843 ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.109      ;
; 0.844 ; LCD_TEST:MyLCD|mDLY[1]                    ; LCD_TEST:MyLCD|mDLY[1]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.110      ;
; 0.845 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.111      ;
; 0.845 ; LCD_TEST:MyLCD|mDLY[3]                    ; LCD_TEST:MyLCD|mDLY[3]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.111      ;
; 0.845 ; LCD_TEST:MyLCD|mDLY[12]                   ; LCD_TEST:MyLCD|mDLY[12]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.111      ;
; 0.845 ; LCD_TEST:MyLCD|mDLY[14]                   ; LCD_TEST:MyLCD|mDLY[14]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.111      ;
; 0.845 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.111      ;
; 0.846 ; LCD_TEST:MyLCD|mDLY[5]                    ; LCD_TEST:MyLCD|mDLY[5]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.112      ;
; 0.846 ; LCD_TEST:MyLCD|mDLY[15]                   ; LCD_TEST:MyLCD|mDLY[15]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.112      ;
; 0.853 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.119      ;
; 0.855 ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.121      ;
; 0.858 ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000011             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.124      ;
; 0.859 ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.125      ;
; 0.861 ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.127      ;
; 0.862 ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000001             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.128      ;
; 0.864 ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; LCD_TEST:MyLCD|mLCD_ST.000010             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.130      ;
; 0.866 ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|mLCD_RS                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.132      ;
; 0.891 ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.157      ;
; 0.893 ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.159      ;
; 0.913 ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|mLCD_DATA[7]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 1.178      ;
; 0.960 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 1.225      ;
; 0.978 ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[7]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 1.243      ;
; 1.004 ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.272      ;
; 1.025 ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 1.290      ;
; 1.036 ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.302      ;
; 1.063 ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.329      ;
; 1.113 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.380      ;
; 1.113 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.380      ;
; 1.113 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.380      ;
; 1.113 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.380      ;
; 1.113 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.380      ;
; 1.113 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.380      ;
; 1.113 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.380      ;
; 1.113 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.380      ;
; 1.113 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.380      ;
; 1.123 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.389      ;
; 1.141 ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; LCD_TEST:MyLCD|mLCD_DATA[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.003     ; 1.404      ;
; 1.179 ; LCD_TEST:MyLCD|mDLY[9]                    ; LCD_TEST:MyLCD|mDLY[10]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.445      ;
; 1.184 ; LCD_TEST:MyLCD|mDLY[10]                   ; LCD_TEST:MyLCD|mDLY[11]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.450      ;
; 1.191 ; LCD_TEST:MyLCD|mDLY[2]                    ; LCD_TEST:MyLCD|mDLY[3]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.457      ;
; 1.192 ; LCD_TEST:MyLCD|mDLY[4]                    ; LCD_TEST:MyLCD|mDLY[5]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.458      ;
; 1.192 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.458      ;
; 1.196 ; LCD_TEST:MyLCD|mDLY[11]                   ; LCD_TEST:MyLCD|mDLY[12]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.462      ;
; 1.197 ; LCD_TEST:MyLCD|mDLY[6]                    ; LCD_TEST:MyLCD|mDLY[7]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.463      ;
; 1.197 ; LCD_TEST:MyLCD|mDLY[7]                    ; LCD_TEST:MyLCD|mDLY[8]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.463      ;
; 1.197 ; LCD_TEST:MyLCD|mDLY[13]                   ; LCD_TEST:MyLCD|mDLY[14]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.463      ;
; 1.200 ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.466      ;
; 1.202 ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|mLCD_DATA[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 1.467      ;
; 1.226 ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.492      ;
; 1.230 ; LCD_TEST:MyLCD|mDLY[1]                    ; LCD_TEST:MyLCD|mDLY[2]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.496      ;
; 1.230 ; LCD_TEST:MyLCD|mLCD_ST.000011             ; LCD_TEST:MyLCD|mLCD_ST.000001             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.496      ;
; 1.231 ; LCD_TEST:MyLCD|mDLY[3]                    ; LCD_TEST:MyLCD|mDLY[4]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.497      ;
; 1.231 ; LCD_TEST:MyLCD|mDLY[12]                   ; LCD_TEST:MyLCD|mDLY[13]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.497      ;
; 1.231 ; LCD_TEST:MyLCD|mDLY[14]                   ; LCD_TEST:MyLCD|mDLY[15]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.497      ;
; 1.232 ; LCD_TEST:MyLCD|mDLY[5]                    ; LCD_TEST:MyLCD|mDLY[6]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.498      ;
; 1.232 ; LCD_TEST:MyLCD|mDLY[15]                   ; LCD_TEST:MyLCD|mDLY[16]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.498      ;
; 1.242 ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.508      ;
; 1.244 ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.510      ;
; 1.250 ; LCD_TEST:MyLCD|mDLY[9]                    ; LCD_TEST:MyLCD|mDLY[11]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.516      ;
; 1.255 ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.521      ;
; 1.255 ; LCD_TEST:MyLCD|mDLY[10]                   ; LCD_TEST:MyLCD|mDLY[12]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.521      ;
; 1.258 ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; LCD_TEST:MyLCD|mLCD_DATA[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 1.523      ;
; 1.262 ; LCD_TEST:MyLCD|mDLY[2]                    ; LCD_TEST:MyLCD|mDLY[4]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.528      ;
+-------+-------------------------------------------+-------------------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'KEY[1]'                                                                                                                               ;
+-------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                           ; To Node                             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+
; 1.400 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.665      ;
; 1.966 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.004      ; 2.236      ;
; 2.030 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[4][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 2.292      ;
; 2.030 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[6][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 2.292      ;
; 2.089 ; register_8BITS:myReg|register[3][3] ; register_8BITS:myReg|register[7][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 2.353      ;
; 2.146 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[2][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 2.412      ;
; 2.154 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[2][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 2.420      ;
; 2.162 ; register_8BITS:myReg|register[1][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.006     ; 2.422      ;
; 2.288 ; register_8BITS:myReg|register[6][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 2.555      ;
; 2.334 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[2][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.005      ; 2.605      ;
; 2.355 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[2][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 2.620      ;
; 2.356 ; register_8BITS:myReg|register[1][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.004      ; 2.626      ;
; 2.370 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[5][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 2.633      ;
; 2.377 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[7][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 2.641      ;
; 2.378 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[5][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 2.642      ;
; 2.381 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[7][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 2.645      ;
; 2.384 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[6][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 2.648      ;
; 2.421 ; register_8BITS:myReg|register[3][5] ; register_8BITS:myReg|register[4][5] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.006     ; 2.681      ;
; 2.453 ; register_8BITS:myReg|register[3][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 2.718      ;
; 2.475 ; register_8BITS:myReg|register[1][3] ; register_8BITS:myReg|register[7][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 2.739      ;
; 2.490 ; register_8BITS:myReg|register[7][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 2.757      ;
; 2.513 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[2][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 2.778      ;
; 2.513 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[1][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 2.779      ;
; 2.520 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[2][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 2.786      ;
; 2.528 ; register_8BITS:myReg|register[2][3] ; register_8BITS:myReg|register[7][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 2.793      ;
; 2.538 ; register_8BITS:myReg|register[3][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.006     ; 2.798      ;
; 2.544 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[2][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 2.810      ;
; 2.544 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[1][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 2.810      ;
; 2.550 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[7][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 2.814      ;
; 2.553 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[5][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 2.817      ;
; 2.572 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[3][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.005      ; 2.843      ;
; 2.585 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[3][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 2.846      ;
; 2.595 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[4][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 2.857      ;
; 2.596 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[5][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 2.858      ;
; 2.600 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[7][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.006     ; 2.860      ;
; 2.641 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[4][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 2.903      ;
; 2.673 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.005      ; 2.944      ;
; 2.675 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.005      ; 2.946      ;
; 2.681 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[3][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 2.947      ;
; 2.681 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[1][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 2.947      ;
; 2.691 ; register_8BITS:myReg|register[3][3] ; register_8BITS:myReg|register[2][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 2.956      ;
; 2.693 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[1][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.005      ; 2.964      ;
; 2.694 ; register_8BITS:myReg|register[7][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 2.961      ;
; 2.695 ; register_8BITS:myReg|register[5][3] ; register_8BITS:myReg|register[7][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 2.960      ;
; 2.716 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 2.979      ;
; 2.750 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[5][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 3.015      ;
; 2.751 ; register_8BITS:myReg|register[1][2] ; register_8BITS:myReg|register[2][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 3.016      ;
; 2.753 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[7][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 3.018      ;
; 2.765 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[3][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.031      ;
; 2.775 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[4][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 3.042      ;
; 2.776 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[5][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 3.043      ;
; 2.780 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[7][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 3.045      ;
; 2.782 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[6][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 3.044      ;
; 2.795 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[5][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.002      ; 3.063      ;
; 2.841 ; register_8BITS:myReg|register[1][5] ; register_8BITS:myReg|register[4][5] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.006     ; 3.101      ;
; 2.854 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 3.119      ;
; 2.874 ; register_8BITS:myReg|register[2][1] ; register_8BITS:myReg|register[4][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 3.137      ;
; 2.874 ; register_8BITS:myReg|register[2][1] ; register_8BITS:myReg|register[6][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 3.137      ;
; 2.879 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[1][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.145      ;
; 2.894 ; register_8BITS:myReg|register[6][7] ; register_8BITS:myReg|register[3][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.002      ; 3.162      ;
; 2.896 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.002      ; 3.164      ;
; 2.908 ; register_8BITS:myReg|register[1][6] ; register_8BITS:myReg|register[2][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 3.169      ;
; 2.934 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[6][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.003      ; 3.203      ;
; 2.934 ; register_8BITS:myReg|register[1][7] ; register_8BITS:myReg|register[2][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.200      ;
; 2.934 ; register_8BITS:myReg|register[1][7] ; register_8BITS:myReg|register[1][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.200      ;
; 2.937 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[7][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.003      ; 3.206      ;
; 2.946 ; register_8BITS:myReg|register[1][2] ; register_8BITS:myReg|register[7][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 3.210      ;
; 2.949 ; register_8BITS:myReg|register[1][2] ; register_8BITS:myReg|register[5][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 3.213      ;
; 2.951 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[3][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 3.212      ;
; 2.961 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[4][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 3.223      ;
; 2.962 ; register_8BITS:myReg|register[1][7] ; register_8BITS:myReg|register[3][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.005      ; 3.233      ;
; 2.962 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[5][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 3.224      ;
; 2.963 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[4][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 3.227      ;
; 2.966 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[7][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.006     ; 3.226      ;
; 2.967 ; register_8BITS:myReg|register[7][3] ; register_8BITS:myReg|register[7][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.233      ;
; 2.988 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[6][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 3.255      ;
; 2.988 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[3][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 3.255      ;
; 2.997 ; register_8BITS:myReg|register[2][5] ; register_8BITS:myReg|register[4][5] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 3.262      ;
; 3.005 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.271      ;
; 3.007 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.273      ;
; 3.019 ; register_8BITS:myReg|register[1][1] ; register_8BITS:myReg|register[4][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 3.281      ;
; 3.019 ; register_8BITS:myReg|register[1][1] ; register_8BITS:myReg|register[6][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 3.281      ;
; 3.027 ; register_8BITS:myReg|register[4][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.293      ;
; 3.037 ; register_8BITS:myReg|register[1][2] ; register_8BITS:myReg|register[4][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 3.299      ;
; 3.059 ; register_8BITS:myReg|register[3][7] ; register_8BITS:myReg|register[3][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.325      ;
; 3.064 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.330      ;
; 3.065 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.331      ;
; 3.066 ; register_8BITS:myReg|register[3][3] ; register_8BITS:myReg|register[4][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 3.328      ;
; 3.070 ; register_8BITS:myReg|register[3][3] ; register_8BITS:myReg|register[6][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 3.332      ;
; 3.077 ; register_8BITS:myReg|register[1][3] ; register_8BITS:myReg|register[2][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 3.342      ;
; 3.082 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 3.345      ;
; 3.097 ; register_8BITS:myReg|register[2][0] ; register_8BITS:myReg|register[2][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.363      ;
; 3.097 ; register_8BITS:myReg|register[2][0] ; register_8BITS:myReg|register[1][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.363      ;
; 3.117 ; register_8BITS:myReg|register[6][7] ; register_8BITS:myReg|register[5][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 3.382      ;
; 3.118 ; register_8BITS:myReg|register[5][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.002      ; 3.386      ;
; 3.130 ; register_8BITS:myReg|register[2][3] ; register_8BITS:myReg|register[2][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 3.396      ;
; 3.132 ; register_8BITS:myReg|register[1][6] ; register_8BITS:myReg|register[5][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.008     ; 3.390      ;
; 3.140 ; register_8BITS:myReg|register[1][7] ; register_8BITS:myReg|register[5][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 3.405      ;
; 3.142 ; register_8BITS:myReg|register[5][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.002      ; 3.410      ;
; 3.143 ; register_8BITS:myReg|register[1][6] ; register_8BITS:myReg|register[7][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.007     ; 3.402      ;
+-------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                                    ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[10]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[10]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[11]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[11]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[12]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[12]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[13]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[13]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[14]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[14]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[15]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[15]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[16]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[16]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[17]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[17]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[4]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[4]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[5]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[5]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[6]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[6]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[7]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[7]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[8]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[8]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[9]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[9]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_RS                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_RS                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000000             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000000             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000001             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000001             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000010             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000010             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000011             ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'KEY[1]'                                                                              ;
+--------+--------------+----------------+------------------+--------+------------+-------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target                              ;
+--------+--------------+----------------+------------------+--------+------------+-------------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; KEY[1] ; Rise       ; KEY[1]                              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[7][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[7][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[7][1] ;
+--------+--------------+----------------+------------------+--------+------------+-------------------------------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; LCD_DATA[*]  ; CLOCK_50   ; 7.842  ; 7.842  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[0] ; CLOCK_50   ; 7.770  ; 7.770  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[1] ; CLOCK_50   ; 7.516  ; 7.516  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[2] ; CLOCK_50   ; 7.553  ; 7.553  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[3] ; CLOCK_50   ; 7.567  ; 7.567  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[4] ; CLOCK_50   ; 7.548  ; 7.548  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[5] ; CLOCK_50   ; 7.459  ; 7.459  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[6] ; CLOCK_50   ; 7.539  ; 7.539  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[7] ; CLOCK_50   ; 7.842  ; 7.842  ; Rise       ; CLOCK_50        ;
; LCD_EN       ; CLOCK_50   ; 6.725  ; 6.725  ; Rise       ; CLOCK_50        ;
; LCD_RS       ; CLOCK_50   ; 7.041  ; 7.041  ; Rise       ; CLOCK_50        ;
; LEDG[*]      ; KEY[1]     ; 18.115 ; 18.115 ; Rise       ; KEY[1]          ;
;  LEDG[6]     ; KEY[1]     ; 18.115 ; 18.115 ; Rise       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 9.642  ; 9.642  ; Rise       ; KEY[1]          ;
; LEDG[*]      ; KEY[1]     ; 9.642  ; 9.642  ; Fall       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 9.642  ; 9.642  ; Fall       ; KEY[1]          ;
+--------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                              ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; LCD_DATA[*]  ; CLOCK_50   ; 7.459  ; 7.459  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[0] ; CLOCK_50   ; 7.770  ; 7.770  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[1] ; CLOCK_50   ; 7.516  ; 7.516  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[2] ; CLOCK_50   ; 7.553  ; 7.553  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[3] ; CLOCK_50   ; 7.567  ; 7.567  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[4] ; CLOCK_50   ; 7.548  ; 7.548  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[5] ; CLOCK_50   ; 7.459  ; 7.459  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[6] ; CLOCK_50   ; 7.539  ; 7.539  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[7] ; CLOCK_50   ; 7.842  ; 7.842  ; Rise       ; CLOCK_50        ;
; LCD_EN       ; CLOCK_50   ; 6.725  ; 6.725  ; Rise       ; CLOCK_50        ;
; LCD_RS       ; CLOCK_50   ; 7.041  ; 7.041  ; Rise       ; CLOCK_50        ;
; LEDG[*]      ; KEY[1]     ; 9.642  ; 9.642  ; Rise       ; KEY[1]          ;
;  LEDG[6]     ; KEY[1]     ; 11.882 ; 11.882 ; Rise       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 9.642  ; 9.642  ; Rise       ; KEY[1]          ;
; LEDG[*]      ; KEY[1]     ; 9.642  ; 9.642  ; Fall       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 9.642  ; 9.642  ; Fall       ; KEY[1]          ;
+--------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------+
; Propagation Delay                                  ;
+------------+-------------+----+-------+-------+----+
; Input Port ; Output Port ; RR ; RF    ; FR    ; FF ;
+------------+-------------+----+-------+-------+----+
; KEY[2]     ; LEDG[7]     ;    ; 9.071 ; 9.071 ;    ;
+------------+-------------+----+-------+-------+----+


+----------------------------------------------------+
; Minimum Propagation Delay                          ;
+------------+-------------+----+-------+-------+----+
; Input Port ; Output Port ; RR ; RF    ; FR    ; FF ;
+------------+-------------+----+-------+-------+----+
; KEY[2]     ; LEDG[7]     ;    ; 9.071 ; 9.071 ;    ;
+------------+-------------+----+-------+-------+----+


+-----------------------------------+
; Fast Model Setup Summary          ;
+----------+--------+---------------+
; Clock    ; Slack  ; End Point TNS ;
+----------+--------+---------------+
; KEY[1]   ; -2.271 ; -113.214      ;
; CLOCK_50 ; -0.890 ; -14.453       ;
+----------+--------+---------------+


+----------------------------------+
; Fast Model Hold Summary          ;
+----------+-------+---------------+
; Clock    ; Slack ; End Point TNS ;
+----------+-------+---------------+
; CLOCK_50 ; 0.215 ; 0.000         ;
; KEY[1]   ; 0.600 ; 0.000         ;
+----------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+----------+--------+--------------------+
; Clock    ; Slack  ; End Point TNS      ;
+----------+--------+--------------------+
; CLOCK_50 ; -1.380 ; -52.380            ;
; KEY[1]   ; -1.222 ; -57.222            ;
+----------+--------+--------------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'KEY[1]'                                                                                                                               ;
+--------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+
; -2.271 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.305      ;
; -2.270 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.304      ;
; -2.251 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.286      ;
; -2.250 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.285      ;
; -2.209 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.243      ;
; -2.205 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[3][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.239      ;
; -2.204 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[5][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 3.236      ;
; -2.189 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.224      ;
; -2.188 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.223      ;
; -2.187 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.222      ;
; -2.185 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[3][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.220      ;
; -2.184 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[5][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 3.217      ;
; -2.183 ; register_8BITS:myReg|register[6][1] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.218      ;
; -2.182 ; register_8BITS:myReg|register[6][1] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.217      ;
; -2.173 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 3.199      ;
; -2.170 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 3.196      ;
; -2.169 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[3][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.204      ;
; -2.166 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[1][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.201      ;
; -2.165 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[5][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 3.198      ;
; -2.165 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.199      ;
; -2.164 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.198      ;
; -2.156 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 3.188      ;
; -2.150 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.007     ; 3.175      ;
; -2.149 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.001     ; 3.180      ;
; -2.148 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.182      ;
; -2.147 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.007     ; 3.172      ;
; -2.146 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[3][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.180      ;
; -2.145 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.180      ;
; -2.144 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[3][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.178      ;
; -2.144 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.179      ;
; -2.143 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[5][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 3.175      ;
; -2.143 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[1][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.177      ;
; -2.142 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[5][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 3.174      ;
; -2.138 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[7][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 3.167      ;
; -2.136 ; register_8BITS:myReg|register[4][5] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.005      ; 3.173      ;
; -2.135 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[6][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 3.164      ;
; -2.135 ; register_8BITS:myReg|register[4][5] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.005      ; 3.172      ;
; -2.133 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.001     ; 3.164      ;
; -2.131 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[7][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 3.160      ;
; -2.131 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.166      ;
; -2.130 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.165      ;
; -2.130 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 3.156      ;
; -2.129 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[6][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 3.158      ;
; -2.129 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.164      ;
; -2.129 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[6][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 3.161      ;
; -2.127 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 3.153      ;
; -2.126 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[3][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.161      ;
; -2.125 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[3][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.160      ;
; -2.124 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[5][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 3.157      ;
; -2.123 ; register_8BITS:myReg|register[6][2] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.158      ;
; -2.123 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[1][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.158      ;
; -2.122 ; register_8BITS:myReg|register[6][2] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.157      ;
; -2.122 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[5][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 3.155      ;
; -2.121 ; register_8BITS:myReg|register[6][1] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.156      ;
; -2.121 ; register_8BITS:myReg|register[4][5] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.004     ; 3.149      ;
; -2.118 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 3.144      ;
; -2.118 ; register_8BITS:myReg|register[4][5] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.004     ; 3.146      ;
; -2.117 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[3][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 3.143      ;
; -2.117 ; register_8BITS:myReg|register[6][1] ; register_8BITS:myReg|register[3][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.152      ;
; -2.116 ; register_8BITS:myReg|register[6][1] ; register_8BITS:myReg|register[5][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 3.149      ;
; -2.116 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 3.142      ;
; -2.116 ; register_8BITS:myReg|register[5][5] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.150      ;
; -2.115 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[7][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.004     ; 3.143      ;
; -2.115 ; register_8BITS:myReg|register[5][5] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.149      ;
; -2.113 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.006     ; 3.139      ;
; -2.113 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 3.145      ;
; -2.112 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[3][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.147      ;
; -2.112 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.004     ; 3.140      ;
; -2.109 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[1][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.144      ;
; -2.108 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[5][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.001      ; 3.141      ;
; -2.108 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[7][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.004     ; 3.136      ;
; -2.106 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.004     ; 3.134      ;
; -2.105 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.139      ;
; -2.104 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[4][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.009     ; 3.127      ;
; -2.104 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.138      ;
; -2.104 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.138      ;
; -2.103 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.137      ;
; -2.101 ; register_8BITS:myReg|register[5][5] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.007     ; 3.126      ;
; -2.099 ; register_8BITS:myReg|register[4][3] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.000      ; 3.131      ;
; -2.099 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[6][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.005     ; 3.126      ;
; -2.098 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[6][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.005     ; 3.125      ;
; -2.098 ; register_8BITS:myReg|register[5][5] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.007     ; 3.123      ;
; -2.098 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[3][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.005     ; 3.125      ;
; -2.097 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[3][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.005     ; 3.124      ;
; -2.095 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[7][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 3.124      ;
; -2.092 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[6][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 3.121      ;
; -2.089 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.007     ; 3.114      ;
; -2.088 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[7][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 3.117      ;
; -2.086 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.007     ; 3.111      ;
; -2.086 ; register_8BITS:myReg|register[4][5] ; register_8BITS:myReg|register[7][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.001     ; 3.117      ;
; -2.086 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[6][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.003     ; 3.115      ;
; -2.085 ; register_8BITS:myReg|register[6][2] ; register_8BITS:myReg|register[1][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.003      ; 3.120      ;
; -2.085 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[3][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.119      ;
; -2.085 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[4][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.008     ; 3.109      ;
; -2.084 ; register_8BITS:myReg|register[4][1] ; register_8BITS:myReg|register[4][0] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.008     ; 3.108      ;
; -2.083 ; register_8BITS:myReg|register[4][5] ; register_8BITS:myReg|register[6][7] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.001     ; 3.114      ;
; -2.082 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[5][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.002     ; 3.112      ;
; -2.082 ; register_8BITS:myReg|register[6][3] ; register_8BITS:myReg|register[4][4] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.002     ; 3.112      ;
; -2.082 ; register_8BITS:myReg|register[5][2] ; register_8BITS:myReg|register[1][5] ; KEY[1]       ; KEY[1]      ; 1.000        ; 0.002      ; 3.116      ;
; -2.081 ; register_8BITS:myReg|register[5][1] ; register_8BITS:myReg|register[6][3] ; KEY[1]       ; KEY[1]      ; 1.000        ; -0.001     ; 3.112      ;
+--------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLOCK_50'                                                                                                                       ;
+--------+-------------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; -0.890 ; LCD_TEST:MyLCD|LUT_INDEX[1]         ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 1.924      ;
; -0.782 ; register_8BITS:myReg|register[4][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.089      ; 1.903      ;
; -0.755 ; LCD_TEST:MyLCD|LUT_INDEX[2]         ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 1.789      ;
; -0.708 ; register_8BITS:myReg|register[7][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.088      ; 1.828      ;
; -0.694 ; LCD_TEST:MyLCD|LUT_INDEX[3]         ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 1.728      ;
; -0.693 ; LCD_TEST:MyLCD|LUT_INDEX[0]         ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 1.727      ;
; -0.670 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.702      ;
; -0.670 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.702      ;
; -0.670 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.702      ;
; -0.670 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.702      ;
; -0.670 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.702      ;
; -0.670 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.702      ;
; -0.670 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.702      ;
; -0.670 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.702      ;
; -0.670 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.702      ;
; -0.653 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.685      ;
; -0.653 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.685      ;
; -0.653 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.685      ;
; -0.653 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.685      ;
; -0.653 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.685      ;
; -0.653 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.685      ;
; -0.653 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.685      ;
; -0.653 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.685      ;
; -0.653 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.685      ;
; -0.610 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.642      ;
; -0.610 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.642      ;
; -0.610 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.642      ;
; -0.610 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.642      ;
; -0.610 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.642      ;
; -0.610 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.642      ;
; -0.610 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.642      ;
; -0.610 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.642      ;
; -0.610 ; LCD_TEST:MyLCD|mDLY[1]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.642      ;
; -0.587 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.619      ;
; -0.587 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.619      ;
; -0.587 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.619      ;
; -0.587 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.619      ;
; -0.587 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.619      ;
; -0.587 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.619      ;
; -0.587 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.619      ;
; -0.587 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.619      ;
; -0.587 ; LCD_TEST:MyLCD|mDLY[8]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.619      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[2]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.516 ; register_8BITS:myReg|register[2][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.087      ; 1.635      ;
; -0.516 ; register_8BITS:myReg|register[6][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.086      ; 1.634      ;
; -0.473 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mLCD_ST.000010 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.509      ;
; -0.472 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mLCD_ST.000001 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.508      ;
; -0.472 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mLCD_ST.000011 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.508      ;
; -0.466 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.498      ;
; -0.466 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.498      ;
; -0.466 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.498      ;
; -0.466 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.498      ;
; -0.466 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.498      ;
; -0.466 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.498      ;
; -0.466 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.498      ;
; -0.466 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.498      ;
; -0.466 ; LCD_TEST:MyLCD|mDLY[7]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.498      ;
; -0.456 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mLCD_ST.000010 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.492      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[9]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.494      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[10]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.494      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[11]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.494      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[12]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.494      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[13]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.494      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[14]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.494      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[15]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.494      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[16]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.494      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[3]              ; LCD_TEST:MyLCD|mDLY[17]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.494      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mLCD_ST.000001 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.491      ;
; -0.455 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mLCD_ST.000011 ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.491      ;
; -0.453 ; register_8BITS:myReg|register[1][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.087      ; 1.572      ;
; -0.438 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[9]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.477      ;
; -0.438 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[10]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.477      ;
; -0.438 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[11]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.477      ;
; -0.438 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[12]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.477      ;
; -0.438 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[13]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.477      ;
; -0.438 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[14]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.477      ;
; -0.438 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[15]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.477      ;
; -0.438 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[16]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.477      ;
; -0.438 ; LCD_TEST:MyLCD|mDLY[4]              ; LCD_TEST:MyLCD|mDLY[17]       ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 1.477      ;
; -0.429 ; register_8BITS:myReg|register[3][0] ; LCD_TEST:MyLCD|mLCD_DATA[0]   ; KEY[1]       ; CLOCK_50    ; 1.000        ; 0.086      ; 1.547      ;
; -0.428 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.460      ;
; -0.428 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.460      ;
; -0.428 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.460      ;
; -0.428 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[3]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.460      ;
; -0.428 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[4]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.460      ;
; -0.428 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[5]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.460      ;
; -0.428 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[6]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.460      ;
; -0.428 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[7]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.460      ;
; -0.428 ; LCD_TEST:MyLCD|mDLY[5]              ; LCD_TEST:MyLCD|mDLY[8]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.460      ;
; -0.415 ; LCD_TEST:MyLCD|mDLY[6]              ; LCD_TEST:MyLCD|mDLY[0]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.447      ;
; -0.415 ; LCD_TEST:MyLCD|mDLY[6]              ; LCD_TEST:MyLCD|mDLY[1]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.447      ;
; -0.415 ; LCD_TEST:MyLCD|mDLY[6]              ; LCD_TEST:MyLCD|mDLY[2]        ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.447      ;
+--------+-------------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLOCK_50'                                                                                                                                         ;
+-------+-------------------------------------------+-------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                                 ; To Node                                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------------------------+-------------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000010             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.249 ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.401      ;
; 0.256 ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.408      ;
; 0.257 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.409      ;
; 0.267 ; LCD_TEST:MyLCD|mLCD_ST.000011             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.419      ;
; 0.271 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.423      ;
; 0.273 ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.425      ;
; 0.276 ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_RS                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.428      ;
; 0.278 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.430      ;
; 0.284 ; LCD_TEST:MyLCD|mLCD_ST.000011             ; LCD_TEST:MyLCD|mLCD_ST.000000             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.436      ;
; 0.321 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.002     ; 0.471      ;
; 0.332 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.484      ;
; 0.356 ; LCD_TEST:MyLCD|mDLY[0]                    ; LCD_TEST:MyLCD|mDLY[0]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.508      ;
; 0.357 ; LCD_TEST:MyLCD|mDLY[9]                    ; LCD_TEST:MyLCD|mDLY[9]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.509      ;
; 0.359 ; LCD_TEST:MyLCD|mDLY[10]                   ; LCD_TEST:MyLCD|mDLY[10]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.511      ;
; 0.364 ; LCD_TEST:MyLCD|mDLY[2]                    ; LCD_TEST:MyLCD|mDLY[2]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.516      ;
; 0.364 ; LCD_TEST:MyLCD|mDLY[4]                    ; LCD_TEST:MyLCD|mDLY[4]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.516      ;
; 0.367 ; LCD_TEST:MyLCD|mDLY[6]                    ; LCD_TEST:MyLCD|mDLY[6]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.367 ; LCD_TEST:MyLCD|mDLY[7]                    ; LCD_TEST:MyLCD|mDLY[7]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.367 ; LCD_TEST:MyLCD|mDLY[8]                    ; LCD_TEST:MyLCD|mDLY[8]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.367 ; LCD_TEST:MyLCD|mDLY[11]                   ; LCD_TEST:MyLCD|mDLY[11]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.367 ; LCD_TEST:MyLCD|mDLY[16]                   ; LCD_TEST:MyLCD|mDLY[16]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.368 ; LCD_TEST:MyLCD|mDLY[13]                   ; LCD_TEST:MyLCD|mDLY[13]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.520      ;
; 0.370 ; LCD_TEST:MyLCD|mDLY[17]                   ; LCD_TEST:MyLCD|mDLY[17]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.522      ;
; 0.376 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.528      ;
; 0.377 ; LCD_TEST:MyLCD|mDLY[1]                    ; LCD_TEST:MyLCD|mDLY[1]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.529      ;
; 0.377 ; LCD_TEST:MyLCD|mDLY[3]                    ; LCD_TEST:MyLCD|mDLY[3]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.529      ;
; 0.377 ; LCD_TEST:MyLCD|mDLY[12]                   ; LCD_TEST:MyLCD|mDLY[12]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.529      ;
; 0.378 ; LCD_TEST:MyLCD|mDLY[5]                    ; LCD_TEST:MyLCD|mDLY[5]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.530      ;
; 0.378 ; LCD_TEST:MyLCD|mDLY[14]                   ; LCD_TEST:MyLCD|mDLY[14]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.530      ;
; 0.378 ; LCD_TEST:MyLCD|mDLY[15]                   ; LCD_TEST:MyLCD|mDLY[15]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.530      ;
; 0.380 ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.532      ;
; 0.380 ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|mLCD_DATA[6]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 0.531      ;
; 0.382 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.534      ;
; 0.382 ; LCD_TEST:MyLCD|mLCD_ST.000001             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.534      ;
; 0.382 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.534      ;
; 0.383 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.535      ;
; 0.384 ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.536      ;
; 0.387 ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000001             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.539      ;
; 0.387 ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.539      ;
; 0.388 ; LCD_TEST:MyLCD|mLCD_ST.000001             ; LCD_TEST:MyLCD|mLCD_ST.000010             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.540      ;
; 0.389 ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.541      ;
; 0.390 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.542      ;
; 0.391 ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.543      ;
; 0.395 ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|mLCD_RS                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.547      ;
; 0.400 ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.552      ;
; 0.400 ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; LCD_TEST:MyLCD|mLCD_ST.000010             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.552      ;
; 0.403 ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.555      ;
; 0.414 ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000011             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.566      ;
; 0.416 ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|mLCD_DATA[7]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 0.567      ;
; 0.448 ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.002     ; 0.598      ;
; 0.463 ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.615      ;
; 0.469 ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 0.623      ;
; 0.477 ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 0.628      ;
; 0.478 ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[7]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 0.629      ;
; 0.488 ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.640      ;
; 0.495 ; LCD_TEST:MyLCD|mDLY[9]                    ; LCD_TEST:MyLCD|mDLY[10]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.647      ;
; 0.497 ; LCD_TEST:MyLCD|mDLY[10]                   ; LCD_TEST:MyLCD|mDLY[11]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.649      ;
; 0.502 ; LCD_TEST:MyLCD|mDLY[2]                    ; LCD_TEST:MyLCD|mDLY[3]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.654      ;
; 0.502 ; LCD_TEST:MyLCD|mDLY[4]                    ; LCD_TEST:MyLCD|mDLY[5]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.654      ;
; 0.505 ; LCD_TEST:MyLCD|mDLY[6]                    ; LCD_TEST:MyLCD|mDLY[7]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.505 ; LCD_TEST:MyLCD|mDLY[7]                    ; LCD_TEST:MyLCD|mDLY[8]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.505 ; LCD_TEST:MyLCD|mDLY[11]                   ; LCD_TEST:MyLCD|mDLY[12]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.506 ; LCD_TEST:MyLCD|mDLY[13]                   ; LCD_TEST:MyLCD|mDLY[14]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.658      ;
; 0.515 ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; LCD_TEST:MyLCD|mLCD_DATA[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.003     ; 0.664      ;
; 0.517 ; LCD_TEST:MyLCD|mDLY[1]                    ; LCD_TEST:MyLCD|mDLY[2]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.669      ;
; 0.517 ; LCD_TEST:MyLCD|mDLY[3]                    ; LCD_TEST:MyLCD|mDLY[4]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.669      ;
; 0.517 ; LCD_TEST:MyLCD|mDLY[12]                   ; LCD_TEST:MyLCD|mDLY[13]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.669      ;
; 0.518 ; LCD_TEST:MyLCD|mDLY[5]                    ; LCD_TEST:MyLCD|mDLY[6]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.670      ;
; 0.518 ; LCD_TEST:MyLCD|mDLY[15]                   ; LCD_TEST:MyLCD|mDLY[16]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.670      ;
; 0.518 ; LCD_TEST:MyLCD|mDLY[14]                   ; LCD_TEST:MyLCD|mDLY[15]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.670      ;
; 0.518 ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.670      ;
; 0.527 ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.679      ;
; 0.529 ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.681      ;
; 0.530 ; LCD_TEST:MyLCD|mDLY[9]                    ; LCD_TEST:MyLCD|mDLY[11]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.682      ;
; 0.532 ; LCD_TEST:MyLCD|mDLY[10]                   ; LCD_TEST:MyLCD|mDLY[12]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.684      ;
; 0.537 ; LCD_TEST:MyLCD|mDLY[2]                    ; LCD_TEST:MyLCD|mDLY[4]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.689      ;
; 0.537 ; LCD_TEST:MyLCD|mDLY[4]                    ; LCD_TEST:MyLCD|mDLY[6]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.689      ;
; 0.538 ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.690      ;
; 0.540 ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.692      ;
; 0.540 ; LCD_TEST:MyLCD|mDLY[6]                    ; LCD_TEST:MyLCD|mDLY[8]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.692      ;
; 0.540 ; LCD_TEST:MyLCD|mDLY[11]                   ; LCD_TEST:MyLCD|mDLY[13]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.692      ;
; 0.541 ; LCD_TEST:MyLCD|mDLY[13]                   ; LCD_TEST:MyLCD|mDLY[15]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.693      ;
; 0.543 ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.695      ;
; 0.545 ; LCD_TEST:MyLCD|mDLY[8]                    ; LCD_TEST:MyLCD|mDLY[9]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.007      ; 0.704      ;
; 0.546 ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|mLCD_DATA[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 0.697      ;
; 0.547 ; LCD_TEST:MyLCD|mLCD_ST.000011             ; LCD_TEST:MyLCD|mLCD_ST.000001             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.699      ;
; 0.549 ; LCD_TEST:MyLCD|mDLY[0]                    ; LCD_TEST:MyLCD|mDLY[1]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.701      ;
; 0.552 ; LCD_TEST:MyLCD|mDLY[1]                    ; LCD_TEST:MyLCD|mDLY[3]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.704      ;
; 0.552 ; LCD_TEST:MyLCD|mDLY[3]                    ; LCD_TEST:MyLCD|mDLY[5]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.704      ;
; 0.552 ; LCD_TEST:MyLCD|mDLY[12]                   ; LCD_TEST:MyLCD|mDLY[14]                   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.704      ;
; 0.553 ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.705      ;
; 0.553 ; LCD_TEST:MyLCD|mDLY[5]                    ; LCD_TEST:MyLCD|mDLY[7]                    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.705      ;
+-------+-------------------------------------------+-------------------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'KEY[1]'                                                                                                                               ;
+-------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                           ; To Node                             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.600 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 0.751      ;
; 0.879 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.004      ; 1.035      ;
; 0.913 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[4][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 1.062      ;
; 0.913 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[6][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 1.062      ;
; 0.922 ; register_8BITS:myReg|register[3][3] ; register_8BITS:myReg|register[7][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.072      ;
; 0.931 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[2][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.083      ;
; 0.948 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[2][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.100      ;
; 0.964 ; register_8BITS:myReg|register[1][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 1.111      ;
; 1.016 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[2][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.005      ; 1.173      ;
; 1.030 ; register_8BITS:myReg|register[6][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 1.183      ;
; 1.040 ; register_8BITS:myReg|register[1][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.004      ; 1.196      ;
; 1.045 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[5][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 1.194      ;
; 1.053 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[7][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.203      ;
; 1.056 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[6][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.206      ;
; 1.072 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[2][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.223      ;
; 1.078 ; register_8BITS:myReg|register[1][3] ; register_8BITS:myReg|register[7][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.228      ;
; 1.083 ; register_8BITS:myReg|register[2][3] ; register_8BITS:myReg|register[7][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.234      ;
; 1.089 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[2][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.241      ;
; 1.094 ; register_8BITS:myReg|register[3][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.245      ;
; 1.098 ; register_8BITS:myReg|register[7][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 1.251      ;
; 1.099 ; register_8BITS:myReg|register[3][5] ; register_8BITS:myReg|register[4][5] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 1.246      ;
; 1.108 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[7][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.258      ;
; 1.109 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[5][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.259      ;
; 1.119 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[1][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.271      ;
; 1.124 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[3][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 1.271      ;
; 1.128 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[2][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.278      ;
; 1.131 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[7][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 1.278      ;
; 1.132 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[5][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 1.280      ;
; 1.132 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[4][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 1.280      ;
; 1.134 ; register_8BITS:myReg|register[3][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 1.281      ;
; 1.139 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[2][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.291      ;
; 1.139 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[1][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.291      ;
; 1.140 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[3][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.005      ; 1.297      ;
; 1.158 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[7][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.308      ;
; 1.161 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[5][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.311      ;
; 1.163 ; register_8BITS:myReg|register[5][3] ; register_8BITS:myReg|register[7][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.315      ;
; 1.174 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[4][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 1.323      ;
; 1.174 ; register_8BITS:myReg|register[7][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 1.327      ;
; 1.182 ; register_8BITS:myReg|register[3][3] ; register_8BITS:myReg|register[2][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.333      ;
; 1.185 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[3][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.004      ; 1.341      ;
; 1.186 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[1][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.004      ; 1.342      ;
; 1.190 ; register_8BITS:myReg|register[2][6] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.341      ;
; 1.204 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[1][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.005      ; 1.361      ;
; 1.206 ; register_8BITS:myReg|register[2][4] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.356      ;
; 1.209 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[3][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.361      ;
; 1.216 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[7][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.368      ;
; 1.217 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[5][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 1.370      ;
; 1.217 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[4][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 1.370      ;
; 1.231 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[5][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.382      ;
; 1.233 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[3][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.385      ;
; 1.233 ; register_8BITS:myReg|register[3][1] ; register_8BITS:myReg|register[1][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.385      ;
; 1.234 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[7][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.385      ;
; 1.237 ; register_8BITS:myReg|register[1][2] ; register_8BITS:myReg|register[2][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.388      ;
; 1.239 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[5][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.002      ; 1.393      ;
; 1.254 ; register_8BITS:myReg|register[2][1] ; register_8BITS:myReg|register[4][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.405      ;
; 1.254 ; register_8BITS:myReg|register[2][1] ; register_8BITS:myReg|register[6][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.405      ;
; 1.263 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[6][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 1.412      ;
; 1.265 ; register_8BITS:myReg|register[1][5] ; register_8BITS:myReg|register[4][5] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 1.412      ;
; 1.277 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[1][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.429      ;
; 1.282 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[3][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 1.429      ;
; 1.289 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[7][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.005     ; 1.436      ;
; 1.290 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[5][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 1.438      ;
; 1.290 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[4][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 1.438      ;
; 1.291 ; register_8BITS:myReg|register[6][7] ; register_8BITS:myReg|register[3][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.002      ; 1.445      ;
; 1.291 ; register_8BITS:myReg|register[7][3] ; register_8BITS:myReg|register[7][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.443      ;
; 1.291 ; register_8BITS:myReg|register[3][4] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.003      ; 1.446      ;
; 1.300 ; register_8BITS:myReg|register[1][7] ; register_8BITS:myReg|register[2][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.452      ;
; 1.300 ; register_8BITS:myReg|register[1][7] ; register_8BITS:myReg|register[1][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.452      ;
; 1.301 ; register_8BITS:myReg|register[1][7] ; register_8BITS:myReg|register[3][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.005      ; 1.458      ;
; 1.312 ; register_8BITS:myReg|register[1][6] ; register_8BITS:myReg|register[2][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.004     ; 1.460      ;
; 1.320 ; register_8BITS:myReg|register[4][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.472      ;
; 1.323 ; register_8BITS:myReg|register[1][2] ; register_8BITS:myReg|register[7][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.473      ;
; 1.324 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[6][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.003      ; 1.479      ;
; 1.325 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[4][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.475      ;
; 1.326 ; register_8BITS:myReg|register[1][2] ; register_8BITS:myReg|register[5][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.476      ;
; 1.327 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[7][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.003      ; 1.482      ;
; 1.335 ; register_8BITS:myReg|register[1][1] ; register_8BITS:myReg|register[4][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 1.484      ;
; 1.335 ; register_8BITS:myReg|register[1][1] ; register_8BITS:myReg|register[6][1] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 1.484      ;
; 1.337 ; register_8BITS:myReg|register[5][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.002      ; 1.491      ;
; 1.338 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[3][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 1.491      ;
; 1.338 ; register_8BITS:myReg|register[1][3] ; register_8BITS:myReg|register[2][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.489      ;
; 1.339 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[6][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 1.492      ;
; 1.339 ; register_8BITS:myReg|register[1][2] ; register_8BITS:myReg|register[4][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 1.488      ;
; 1.343 ; register_8BITS:myReg|register[2][3] ; register_8BITS:myReg|register[2][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.495      ;
; 1.355 ; register_8BITS:myReg|register[3][7] ; register_8BITS:myReg|register[3][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.507      ;
; 1.357 ; register_8BITS:myReg|register[5][7] ; register_8BITS:myReg|register[4][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.002      ; 1.511      ;
; 1.359 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[1][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.511      ;
; 1.362 ; register_8BITS:myReg|register[2][7] ; register_8BITS:myReg|register[2][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.514      ;
; 1.364 ; register_8BITS:myReg|register[1][4] ; register_8BITS:myReg|register[6][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.002     ; 1.514      ;
; 1.368 ; register_8BITS:myReg|register[2][5] ; register_8BITS:myReg|register[4][5] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.519      ;
; 1.368 ; register_8BITS:myReg|register[2][0] ; register_8BITS:myReg|register[2][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.520      ;
; 1.368 ; register_8BITS:myReg|register[2][0] ; register_8BITS:myReg|register[1][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.520      ;
; 1.371 ; register_8BITS:myReg|register[3][3] ; register_8BITS:myReg|register[4][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 1.520      ;
; 1.372 ; register_8BITS:myReg|register[6][6] ; register_8BITS:myReg|register[4][6] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.001      ; 1.525      ;
; 1.374 ; register_8BITS:myReg|register[3][3] ; register_8BITS:myReg|register[6][3] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.003     ; 1.523      ;
; 1.382 ; register_8BITS:myReg|register[5][4] ; register_8BITS:myReg|register[2][4] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.004      ; 1.538      ;
; 1.384 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[1][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.536      ;
; 1.385 ; register_8BITS:myReg|register[3][2] ; register_8BITS:myReg|register[3][2] ; KEY[1]       ; KEY[1]      ; 0.000        ; 0.000      ; 1.537      ;
; 1.390 ; register_8BITS:myReg|register[6][7] ; register_8BITS:myReg|register[5][7] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.541      ;
; 1.392 ; register_8BITS:myReg|register[1][7] ; register_8BITS:myReg|register[5][0] ; KEY[1]       ; KEY[1]      ; 0.000        ; -0.001     ; 1.543      ;
+-------+-------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                                    ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[10]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[10]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[11]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[11]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[12]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[12]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[13]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[13]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[14]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[14]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[15]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[15]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[16]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[16]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[17]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[17]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[4]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[4]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[5]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[5]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[6]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[6]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[7]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[7]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[8]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[8]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[9]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[9]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_RS                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_RS                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000000             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000000             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000001             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000001             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000010             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000010             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000011             ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'KEY[1]'                                                                              ;
+--------+--------------+----------------+------------------+--------+------------+-------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target                              ;
+--------+--------------+----------------+------------------+--------+------------+-------------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; KEY[1] ; Rise       ; KEY[1]                              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[1][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[2][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[3][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[4][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[5][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[6][7] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[7][0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[1] ; Rise       ; register_8BITS:myReg|register[7][0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[1] ; Rise       ; register_8BITS:myReg|register[7][1] ;
+--------+--------------+----------------+------------------+--------+------------+-------------------------------------+


+--------------------------------------------------------------------------+
; Clock to Output Times                                                    ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; LCD_DATA[*]  ; CLOCK_50   ; 4.303 ; 4.303 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[0] ; CLOCK_50   ; 4.244 ; 4.244 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[1] ; CLOCK_50   ; 4.130 ; 4.130 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[2] ; CLOCK_50   ; 4.153 ; 4.153 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[3] ; CLOCK_50   ; 4.162 ; 4.162 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[4] ; CLOCK_50   ; 4.144 ; 4.144 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[5] ; CLOCK_50   ; 4.120 ; 4.120 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[6] ; CLOCK_50   ; 4.147 ; 4.147 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[7] ; CLOCK_50   ; 4.303 ; 4.303 ; Rise       ; CLOCK_50        ;
; LCD_EN       ; CLOCK_50   ; 3.786 ; 3.786 ; Rise       ; CLOCK_50        ;
; LCD_RS       ; CLOCK_50   ; 3.941 ; 3.941 ; Rise       ; CLOCK_50        ;
; LEDG[*]      ; KEY[1]     ; 8.821 ; 8.821 ; Rise       ; KEY[1]          ;
;  LEDG[6]     ; KEY[1]     ; 8.821 ; 8.821 ; Rise       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 5.527 ; 5.527 ; Rise       ; KEY[1]          ;
; LEDG[*]      ; KEY[1]     ; 5.527 ; 5.527 ; Fall       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 5.527 ; 5.527 ; Fall       ; KEY[1]          ;
+--------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------+
; Minimum Clock to Output Times                                            ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; LCD_DATA[*]  ; CLOCK_50   ; 4.120 ; 4.120 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[0] ; CLOCK_50   ; 4.244 ; 4.244 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[1] ; CLOCK_50   ; 4.130 ; 4.130 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[2] ; CLOCK_50   ; 4.153 ; 4.153 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[3] ; CLOCK_50   ; 4.162 ; 4.162 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[4] ; CLOCK_50   ; 4.144 ; 4.144 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[5] ; CLOCK_50   ; 4.120 ; 4.120 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[6] ; CLOCK_50   ; 4.147 ; 4.147 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[7] ; CLOCK_50   ; 4.303 ; 4.303 ; Rise       ; CLOCK_50        ;
; LCD_EN       ; CLOCK_50   ; 3.786 ; 3.786 ; Rise       ; CLOCK_50        ;
; LCD_RS       ; CLOCK_50   ; 3.941 ; 3.941 ; Rise       ; CLOCK_50        ;
; LEDG[*]      ; KEY[1]     ; 5.527 ; 5.527 ; Rise       ; KEY[1]          ;
;  LEDG[6]     ; KEY[1]     ; 6.136 ; 6.136 ; Rise       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 5.527 ; 5.527 ; Rise       ; KEY[1]          ;
; LEDG[*]      ; KEY[1]     ; 5.527 ; 5.527 ; Fall       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 5.527 ; 5.527 ; Fall       ; KEY[1]          ;
+--------------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------+
; Propagation Delay                                  ;
+------------+-------------+----+-------+-------+----+
; Input Port ; Output Port ; RR ; RF    ; FR    ; FF ;
+------------+-------------+----+-------+-------+----+
; KEY[2]     ; LEDG[7]     ;    ; 5.205 ; 5.205 ;    ;
+------------+-------------+----+-------+-------+----+


+----------------------------------------------------+
; Minimum Propagation Delay                          ;
+------------+-------------+----+-------+-------+----+
; Input Port ; Output Port ; RR ; RF    ; FR    ; FF ;
+------------+-------------+----+-------+-------+----+
; KEY[2]     ; LEDG[7]     ;    ; 5.205 ; 5.205 ;    ;
+------------+-------------+----+-------+-------+----+


+--------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                            ;
+------------------+----------+-------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+-------+----------+---------+---------------------+
; Worst-case Slack ; -6.526   ; 0.215 ; N/A      ; N/A     ; -1.380              ;
;  CLOCK_50        ; -3.342   ; 0.215 ; N/A      ; N/A     ; -1.380              ;
;  KEY[1]          ; -6.526   ; 0.600 ; N/A      ; N/A     ; -1.222              ;
; Design-wide TNS  ; -414.402 ; 0.0   ; 0.0      ; 0.0     ; -109.602            ;
;  CLOCK_50        ; -81.331  ; 0.000 ; N/A      ; N/A     ; -52.380             ;
;  KEY[1]          ; -333.071 ; 0.000 ; N/A      ; N/A     ; -57.222             ;
+------------------+----------+-------+----------+---------+---------------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+--------------+------------+--------+--------+------------+-----------------+
; Data Port    ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+--------------+------------+--------+--------+------------+-----------------+
; LCD_DATA[*]  ; CLOCK_50   ; 7.842  ; 7.842  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[0] ; CLOCK_50   ; 7.770  ; 7.770  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[1] ; CLOCK_50   ; 7.516  ; 7.516  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[2] ; CLOCK_50   ; 7.553  ; 7.553  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[3] ; CLOCK_50   ; 7.567  ; 7.567  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[4] ; CLOCK_50   ; 7.548  ; 7.548  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[5] ; CLOCK_50   ; 7.459  ; 7.459  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[6] ; CLOCK_50   ; 7.539  ; 7.539  ; Rise       ; CLOCK_50        ;
;  LCD_DATA[7] ; CLOCK_50   ; 7.842  ; 7.842  ; Rise       ; CLOCK_50        ;
; LCD_EN       ; CLOCK_50   ; 6.725  ; 6.725  ; Rise       ; CLOCK_50        ;
; LCD_RS       ; CLOCK_50   ; 7.041  ; 7.041  ; Rise       ; CLOCK_50        ;
; LEDG[*]      ; KEY[1]     ; 18.115 ; 18.115 ; Rise       ; KEY[1]          ;
;  LEDG[6]     ; KEY[1]     ; 18.115 ; 18.115 ; Rise       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 9.642  ; 9.642  ; Rise       ; KEY[1]          ;
; LEDG[*]      ; KEY[1]     ; 9.642  ; 9.642  ; Fall       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 9.642  ; 9.642  ; Fall       ; KEY[1]          ;
+--------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------+
; Minimum Clock to Output Times                                            ;
+--------------+------------+-------+-------+------------+-----------------+
; Data Port    ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+--------------+------------+-------+-------+------------+-----------------+
; LCD_DATA[*]  ; CLOCK_50   ; 4.120 ; 4.120 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[0] ; CLOCK_50   ; 4.244 ; 4.244 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[1] ; CLOCK_50   ; 4.130 ; 4.130 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[2] ; CLOCK_50   ; 4.153 ; 4.153 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[3] ; CLOCK_50   ; 4.162 ; 4.162 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[4] ; CLOCK_50   ; 4.144 ; 4.144 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[5] ; CLOCK_50   ; 4.120 ; 4.120 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[6] ; CLOCK_50   ; 4.147 ; 4.147 ; Rise       ; CLOCK_50        ;
;  LCD_DATA[7] ; CLOCK_50   ; 4.303 ; 4.303 ; Rise       ; CLOCK_50        ;
; LCD_EN       ; CLOCK_50   ; 3.786 ; 3.786 ; Rise       ; CLOCK_50        ;
; LCD_RS       ; CLOCK_50   ; 3.941 ; 3.941 ; Rise       ; CLOCK_50        ;
; LEDG[*]      ; KEY[1]     ; 5.527 ; 5.527 ; Rise       ; KEY[1]          ;
;  LEDG[6]     ; KEY[1]     ; 6.136 ; 6.136 ; Rise       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 5.527 ; 5.527 ; Rise       ; KEY[1]          ;
; LEDG[*]      ; KEY[1]     ; 5.527 ; 5.527 ; Fall       ; KEY[1]          ;
;  LEDG[8]     ; KEY[1]     ; 5.527 ; 5.527 ; Fall       ; KEY[1]          ;
+--------------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------+
; Progagation Delay                                  ;
+------------+-------------+----+-------+-------+----+
; Input Port ; Output Port ; RR ; RF    ; FR    ; FF ;
+------------+-------------+----+-------+-------+----+
; KEY[2]     ; LEDG[7]     ;    ; 9.071 ; 9.071 ;    ;
+------------+-------------+----+-------+-------+----+


+----------------------------------------------------+
; Minimum Progagation Delay                          ;
+------------+-------------+----+-------+-------+----+
; Input Port ; Output Port ; RR ; RF    ; FR    ; FF ;
+------------+-------------+----+-------+-------+----+
; KEY[2]     ; LEDG[7]     ;    ; 5.205 ; 5.205 ;    ;
+------------+-------------+----+-------+-------+----+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; CLOCK_50   ; CLOCK_50 ; 878      ; 0        ; 0        ; 0        ;
; KEY[1]     ; CLOCK_50 ; 29       ; 0        ; 0        ; 0        ;
; KEY[1]     ; KEY[1]   ; 5978     ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; CLOCK_50   ; CLOCK_50 ; 878      ; 0        ; 0        ; 0        ;
; KEY[1]     ; CLOCK_50 ; 29       ; 0        ; 0        ; 0        ;
; KEY[1]     ; KEY[1]   ; 5978     ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 3     ; 3    ;
; Unconstrained Input Port Paths  ; 109   ; 109  ;
; Unconstrained Output Ports      ; 17    ; 17   ;
; Unconstrained Output Port Paths ; 76    ; 76   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Thu Mar 21 15:39:45 2024
Info: Command: quartus_sta Mod_Teste -c Mod_Teste
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 4 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'Mod_Teste.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name KEY[1] KEY[1]
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "my_adder|Add0~8|combout"
    Warning (332126): Node "my_adder|Add0~8|dataa"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "my_adder|Add0~6|datab"
    Warning (332126): Node "my_adder|Add0~6|combout"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "my_adder|Add0~4|combout"
    Warning (332126): Node "my_adder|Add0~4|dataa"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "my_adder|Add0~2|combout"
    Warning (332126): Node "my_adder|Add0~2|datab"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "my_adder|Add0~0|combout"
    Warning (332126): Node "my_adder|Add0~0|dataa"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "my_adder|out_adder[2]~6|combout"
    Warning (332126): Node "my_adder|out_adder[2]~6|datad"
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -6.526
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -6.526      -333.071 KEY[1] 
    Info (332119):    -3.342       -81.331 CLOCK_50 
Info (332146): Worst-case hold slack is 0.391
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.391         0.000 CLOCK_50 
    Info (332119):     1.400         0.000 KEY[1] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -52.380 CLOCK_50 
    Info (332119):    -1.222       -57.222 KEY[1] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.271
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.271      -113.214 KEY[1] 
    Info (332119):    -0.890       -14.453 CLOCK_50 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 CLOCK_50 
    Info (332119):     0.600         0.000 KEY[1] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -52.380 CLOCK_50 
    Info (332119):    -1.222       -57.222 KEY[1] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 23 warnings
    Info: Peak virtual memory: 504 megabytes
    Info: Processing ended: Thu Mar 21 15:39:47 2024
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


